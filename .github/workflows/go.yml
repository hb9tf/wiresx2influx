name: Go

on: [push, pull_request]

jobs:
  test-and-lint:
    strategy:
      matrix:
        go-version: [1.19.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Environment information
      run: |
        go version
        go env
    - name: Vet
      if: matrix.platform == 'ubuntu-latest'
      run: go vet -v ./...
    - name: Lint
      if: matrix.platform == 'ubuntu-latest'
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        go install golang.org/x/lint/golint@latest
        golint -set_exit_status ./...
    - name: staticcheck.io
      if: matrix.platform == 'ubuntu-latest'
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck -checks all ./...
    - name: gofumports formatting
      if: matrix.platform == 'ubuntu-latest'
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        go install mvdan.cc/gofumpt@latest
        gofumpt -d .
        [ -z "$(gofumpt -l .)" ]
    - name: Test
      run: go test -race -count=1 ./...
